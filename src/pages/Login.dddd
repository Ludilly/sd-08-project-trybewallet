import React, { Component } from "react";
import "./Login.css";
import { connect } from "react-redux";
import { getUserEmail, getUserPass, disableButton } from "../actions/user";
import store from "../store";

class Login extends Component {
  constructor(){
    super()
    this.state = {
      email: "",
      pass: "",
      inacitve: false
    };
  }
  
  dispatchButton() {
    const actualStore = store.getState().UserInfo;
    const disableButton = actualStore.disablebutton;
    
    console.log(disableButton);
    alert('oi')
  }
  
  emailAndPasswordValidation() {
    const{ inactive } = this.state
    console.log(inactive);

    // let actualStore = store.getState().UserInfo;
    // let emailUser = actualStore.email;
    // let passUser = actualStore.pass;
    // let at = emailUser.indexOf("@");
    // let userName = emailUser.substring(0, emailUser.indexOf("@"));
    // let domainEmail = emailUser.substring(
    //   emailUser.indexOf("@") + 1,
    //   emailUser.length
    //   );
    //   let dotsIndomainEmail = Object.values(domainEmail).filter((item) =>
    //   item.includes(".")
    //   ).length;
      
      
    //   if (
    //     passUser.length >= 6 &&
    //     at !== "" &&
    //     at !== -1 &&
    //     at !== " " &&
    //     at !== null &&
    //     at !== undefined &&
    //     userName.length >= 2 &&
    //     userName.includes("@") === false &&
    //     userName.includes(" ") === false &&
    //     userName.includes(".") >= 0 &&
    //     domainEmail.length >= 3 &&
    //     domainEmail.includes("@") === false &&
    //     domainEmail.includes(" ") === false &&
    //     dotsIndomainEmail <= 2 &&
    //     (domainEmail.includes(".com") || domainEmail.includes(".com.br")) &&
    //     domainEmail.lastIndexOf(".") < domainEmail.length - 1
    //     ){
    //       return this.dispatchButton(),
    //       this.props.disable_button(false);

    //     } 
          
  }

  render() {
const { inactive }= this.state
    return (
      <>
        <div className="limiter">
          <div className="container-login container-login-bg">
            <div className="wrap-login">
              <form
                name="f1"
                className="login-form validate-form"
              >
                <span className="login-form-logo">
                  <i className="zmdi zmdi-landscape"></i>
                </span>

                <span className="login-form-title">Log in</span>

                <div
                  className="wrap-input validate-input"
                  data-validate="Enter username"
                >
                  <input
                    data-testid="email-input"
                    onChange={({ target }) =>
                    this.props.get_user_email(target.value)
                    }
                    className="input"
                    type="text"
                    name="email"
                    placeholder="Email"
                    />
                  <i className=" focus-input" placeholder="&#xf644;"></i>
                </div>

                <div
                  className="wrap-input validate-input"
                  data-validate="Enter password"
                >
                  <input
                    data-testid="password-input"
                    onChange={({ target }) =>
                    this.props.get_user_pass(target.value)
                    }
                    className="input"
                    type="text"
                    name="pass"
                    placeholder="Password"
                  />
                  <span
                    className="focus-input"
                    data-placeholder="&#xf191;"
                  ></span>
                </div>

                <div className="contact-form-checkbox">
                  <input
                    className="input-checkbox"
                    id="ckb1"
                    type="checkbox"
                    name="remember-me"
                  />
                  <label className="label-checkbox" htmlFor="ckb1">
                    Remember me
                  </label>
                </div>

                <div className="container-login-form-btn">
                  <button
                  disabled={this.state.inacitve}
                    name="input-email"
                    type="button"
                    className="login-form-btn"
                    value="Entrar"
                    onClick={this.emailAndPasswordValidation}
                  >
                    Entrar
                  </button>
                </div>

                <div className="text-center">
                  <a className="txt1" href="#">
                    Forgot Password?
                  </a>
                </div>
              </form>
            </div>
          </div>
        </div>
      </>
    );
  }
}
const mapStateToProps = (state) => ({
  email: state.get_User_Email,
  pass: state.get_User_Pass,
  disableButton:state.disableButton,
});

const mapDispatchToProps = (dispatch) => ({
  get_user_email: (get_User_Email) => dispatch(getUserEmail(get_User_Email)),
  get_user_pass: (get_User_Pass) => dispatch(getUserPass(get_User_Pass)),
  disable_button: (res) => dispatch(disableButton(res)),
});

export default connect(mapStateToProps, mapDispatchToProps)(Login);

                    // field.match(/^[A-Za-z0-9.-]+@[A-Za-z0-9]+(\.[A-Za-z]{3}|\.[A-Za-z]{3}\.[A-Za-z]{2})$/
                    // )
                    // const toDispatch = store.getState().user.email;
                    // this.props.get_user_email(field);
                    // field.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{1})*/i);